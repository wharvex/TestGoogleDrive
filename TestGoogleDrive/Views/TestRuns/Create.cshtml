@model TestGoogleDrive.Models.TestRun

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>TestRun</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger">Bad submission.</div>
            <div>
                <div class="h6">
                    @Html.DisplayNameFor(tr => tr.Syncing)
                </div>
                <div class="ps-2">
                    <div class="form-group form-check">
                        <label class="form-check-label">
                            <input value="mirror" class="form-check-input" type="radio" asp-for="Syncing" checked="checked"/>
                            @(Syncing.Mirror.ToString())
                        </label>
                    </div>
                    <div class="form-group form-check">
                        <label class="form-check-label">
                            <input value="stream" class="form-check-input" type="radio" asp-for="Syncing"/>
                            @(Syncing.Stream.ToString())
                        </label>
                    </div>
                </div>
            </div>
            <div>
                <div class="h6">
                    @Html.DisplayNameFor(tr => tr.StreamLoc)
                </div>
                <div class="ps-2">
                    <div class="form-group form-check">
                        <label class="form-check-label">
                            <input value="folder" class="form-check-input" type="radio" asp-for="StreamLoc" checked="checked"/>
                            @(StreamLoc.Folder.ToString())
                        </label>
                    </div>
                    <div class="form-group form-check">
                        <label class="form-check-label">
                            <input value="driveLetter" class="form-check-input" type="radio" asp-for="StreamLoc"/>
                            @(Syncing.Stream.ToString())
                        </label>
                    </div>
                </div>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="AppearsExactlyOnce"/> @Html.DisplayNameFor(model => model.AppearsExactlyOnce)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="NotUnderPlainDrives"/> @Html.DisplayNameFor(model => model.NotUnderPlainDrives)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="OpensMyDriveDirectly"/> @Html.DisplayNameFor(model => model.OpensMyDriveDirectly)
                </label>
            </div>
            <div class="form-group">
                <label class="form-select-label" asp-for="CommitId">Commit:</label>
                <select class="form-select-input" asp-for="CommitId" asp-items=@(ViewData["commits"] as IEnumerable<SelectListItem>)>
                    <option value="">Choose commit...</option>
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}